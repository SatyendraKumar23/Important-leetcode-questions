import java.util.Stack;

public class Solution {
    public String reverseWords(String s) {
        StringBuilder sb = new StringBuilder();
        StringBuilder ans = new StringBuilder();
        
        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);

            if (ch == ' ') {
                String charr = reverse(sb.toString());
                ans.append(charr);
                ans.append(' ');
                sb.setLength(0); // Clear the StringBuilder
            } else {
                sb.append(ch);
            }
        }
        
        // Reverse the last word and append it
        String lastWord = reverse(sb.toString());
        ans.append(lastWord);

        return ans.toString().trim(); // Remove trailing space and return
    }

    public static String reverse(String sb) {
        Stack<Character> stack = new Stack<>();

        for (int i = 0; i < sb.length(); i++) {
            char ch = sb.charAt(i);
            stack.push(ch);
        }

        StringBuilder reversed = new StringBuilder();

        while (!stack.isEmpty()) {
            reversed.append(stack.pop());
        }

        return reversed.toString();
    }
}
 ///one more logic

public class Solution {
    public String reverseWords(String s) {

        String sb="";

        StringBuilder ans=new StringBuilder();
        
        for(int i=0;i<s.length();i++)
        {
            char ch=s.charAt(i);

            if(s.charAt(i)==' ')
            {
               
                ans.append(reverse(sb));
                ans.append(' ');
                sb="";
            }
            else{
                sb+=ch;
            }

        }

        
        ans.append(reverse(sb));
        return ans.toString().trim();
    }
    public static String reverse(String sb)
    {
        Stack<Character>s=new Stack<>();

        for(int i=0;i<sb.length();i++)
        {
            char ch=sb.charAt(i);
            s.push(ch);
        }

        StringBuilder st=new StringBuilder();

        while(!s.isEmpty())
        {
            st.append(s.pop());
        }

        return st.toString();

    }
    
}
